url <- 'https://www.ngdc.noaa.gov/hazel/view/hazards/earthquake/event-data'
read_delim(url)
library(readr)
read_delim(url)
url <- 'https://www.ngdc.noaa.gov/hazel/view/hazards/earthquake/event-data'
read_delim(url)
url <- 'https://www.ngdc.noaa.gov/hazel/view/hazards/earthquake/event-data'
data <- '../data_raw/earthquakes-2021-10-06_09-24-38_+0200.tsv'
read_delim(data)
data <- './data_raw/earthquakes-2021-10-06_09-24-38_+0200.tsv'
read_delim(data)
d <- read_delim(data)
source("~/HDD/D4/GoogleDrive/Proyectos/Cursos/Software Development in R/05_Mastering Software Development in R Capstone/MasteringSofwareDevelopmentInRCapstone/R/Draft.R", echo=TRUE)
d
library(dplyr)
d1 <- d[!is.na(d$Mo),]
d1
as.Date('-480/9/29')
as.Date("1/1/-480",format="%d/%m/-%Y")
library(lubridate)
as.Date("1/1/-480",format="%d/%m/-%Y")
x <- as.Date("1/1/-480",format="%d/%m/-%Y")
class(x)
x2 <- as.Date("1/1/480",format="%d/%m/%Y")
class(x)
x<x2
x2
x
x==x2
as.Date.POSIXlt(x)
as.Date.POSIXct(x)
as.Date.POSIXct("1/1/-480",format="%d/%m/-%Y")
library(gregorian)
install.packages("gregorian")
d %>%
mutate(across(Mo:Dy, replace_na, 1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
d
library(gregorian); library(dplyr)
remotes::install_github("edgararuiz/gregorian")
# remotes::install_github("edgararuiz/gregorian")
library(gregorian)
d %>%
mutate(across(Mo:Dy, replace_na, 1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
d %>%
mutate(across(Mo:Dy, dplyr::replace_na, 1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
install.packages(c("bookdown", "broom.helpers", "bslib", "caret", "colourpicker", "cpp11", "data.table", "deldir", "desc", "dials", "diffobj", "digest", "DT", "e1071", "emmeans", "exactextractr", "flextable", "future", "gert", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "knitr", "lava", "lhs", "lidR", "lifecycle", "maps", "maptools", "matrixStats", "mime", "modeltime", "officer", "openssl", "padr", "parallelly", "pbapply", "pillar", "pkgload", "plotrix", "pls", "pROC", "R.utils", "rcmdcheck", "RcppArmadillo", "RCurl", "readr", "recipes", "remotes", "reticulate", "rgdal", "rgeos", "rgl", "rgrass7", "RhpcBLASctl", "rJava", "RJSONIO", "rmarkdown", "rngtools", "robustbase", "roxygen2", "RPostgres", "RSQLite", "s2", "shadow", "shiny", "shinytest", "stringdist", "stringi", "styler", "terra", "testthat", "TH.data", "tibble", "tidycensus", "tidymodels", "tidyr", "tidytext", "tigris", "tinytex", "vroom", "waldo", "whitebox", "xfun", "XML"))
library(readr)
library(dplyr)
library(lubridate)
# remotes::install_github("edgararuiz/gregorian")
library(gregorian)
#' Read data
data <- './data_raw/earthquakes-2021-10-06_09-24-38_+0200.tsv'
d <- read_delim(data)
library(tidyverse)
d %>%
mutate(Mo = replace_na()) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
d
d %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
d %>%
mutate(Mo = replace_na(1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
d %>%
mutate(Mo = replace_na(1))
d
d %>%
filter(!is.na(Year)) %>%
mutate(Mo = replace_na(1), Dy = replace_na(1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
#' Create DATE in Date class format
d1 <- d %>%
filter(!is.na(Year)) %>%
mutate(Mo = replace_na(1), Dy = replace_na(1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
d1$Date
class(d1$Date)
str(d1)
summary(d1)
#' Converte LATITUDE AND LONGITUDE to numeric class
str(d1@Latitude)
#' Converte LATITUDE AND LONGITUDE to numeric class
d1@Latitude
#' Converte LATITUDE AND LONGITUDE to numeric class
d1$Latitude
#' Converte LATITUDE AND LONGITUDE to numeric class
d1
#' Converte LATITUDE AND LONGITUDE to numeric class
as.data.frame(d1)
as.date('-480-01-09')
as.Date('-480-01-09')
as.Date('480-01-09')
d <- eq_clean_data()
#'------------------------------------------------------------------------------
#'Module 1: Obtain and Clean the Data
#'------------------------------------------------------------------------------
eq_clean_data <- function(NOAArawData='./data_raw/earthquakes-2021-10-06_09-24-38_+0200.tsv'){
#' Url to download --> 'https://www.ngdc.noaa.gov/hazel/view/hazards/earthquake/event-data'
#' Save the raw data in the data_raw folder
#' Read data
#' NOAArawData <- './data_raw/earthquakes-2021-10-06_09-24-38_+0200.tsv'
data <- NOAArawData
d <- read_delim(data)
#' Create DATE in Date class format
d1 <- d %>%
filter(!is.na(Year)) %>%
mutate(Mo = replace_na(1), Dy = replace_na(1)) %>%
mutate(Date = as_gregorian(paste0(Year,"-",Mo,"-",Dy)))
#' Converte LATITUDE AND LONGITUDE to numeric class
return(as.data.frame(d1))
}
d <- eq_clean_data()
d
d$Latitude
class(d$Latitude)
df <- eq_clean_data()
df$`Location Name`
library(stringr)
gsub("^.*:.", '', df$`Location Name`)
gsub("^.*:..", '', df$`Location Name`)
gsub("^.*:", '', df$`Location Name`)
str_trim(gsub("^.*:", '', df$`Location Name`))
# Remove country: and extra spaces
x <- str_trim(gsub("^.*:", '', df$`Location Name`))
str_to_title(x)
#'------------------------------------------------------------------------------
#' In addition, write a function eq_location_clean() that cleans the LOCATION_NAME
#' column by stripping out the country name (including the colon) and converts names to title case (as opposed to all caps)
eq_location_clean <- function(df){
# Remove country: and extra spaces and convert to title
df <- df %>%
mutate(LOCATION_NAME = str_trim(gsub("^.*:", '', df$`Location Name`))) %>%
mutate(LOCATION_NAME = str_to_title(LOCATION_NAME))
return(df)
}
dfclean <- eq_location_clean(df)
dfclean
df[3,]
df[3,]$`Location Name`
library(ggplot2)
dfclean
